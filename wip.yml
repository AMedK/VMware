---
- name: Guest Creation
  gather_facts: no
  vars_files:
    - vcenter_vars.yml
  hosts: localhost
  tasks:
    - name: Clone a virtual machine {{ vm_name }} from existing template {{ template_name }}
      vmware_guest:
        name: "{{ vm_name }}"
        template: "{{ template_name_win }}"
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        state: present
        validate_certs: no 
        folder: "{{ folder }}"
        datacenter: "{{ datacenter_2 }}"
   #     convert: thin
        networks:
          - name: "{{ network }}"
            start_connected: True
            type: static
            device_type: e1000e
            ip: 10.118.77.113
            netmask: 255.255.255.192
          - name: "{{ network_2 }}"
            start_connected: True
            type: static
            device_type: e1000e
            ip: 168.1.95.182
            netmask: 255.255.255.240
            gateway: 168.1.95.177    
        cluster: "{{ cluster_2 }}"
        disk:
          - size_gb: "{{ vm_storage_size }}"
            type: thin
            autoselect_datastore: True
        hardware:
          memory_mb: "{{ vm_memory_size }}"
          num_cpus: "{{ vm_number_of_cpu }}"
        customization:
          dns_servers: 
          - 10.118.77.68
          - 10.0.80.11
          password: RedHat1!
          timezone: 260
        wait_for_ip_address: yes
      register: vm_result
      
    - pause: seconds=180
      
    - name: change computer name to target vm name
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: "{{ vmwin_adminuser }}"
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: '-Command (Rename-Computer -NewName {{ vm_name }} -Force )'    
        
    
    - name: Add Static Routes
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: "{{ vmwin_adminuser }}"
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: "{{ item }}"
      with_items:
        - '-command "& {route -p ADD 10.0.0.0 MASK 255.0.0.0 10.118.77.65}"'
    #    - '-command "& {route -p ADD 0.0.0.0 MASK 0.0.0.0 168.1.95.177}"'

    
    - name: Enable WinRM to be used with Ansible 
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: Administrator
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: "{{ item }}" 
      with_items:
        - '-command "& {Set-ExecutionPolicy Unrestricted}"'
        - '-command "& {Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(\"https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1\"))}"'
        - '-command "& {Set-ExecutionPolicy RemoteSigned}"'
    
      
    
    - name: join to AD domain
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: Administrator
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: "{{ item }}" 
      with_items:  
        - '-Command "& {$pwd = ConvertTo-SecureString -AsPlainText -Force \"{{ vmwin_ad_adminpassword }}\" ; $cred = New-Object System.Management.Automation.PSCredential(\"{{ vmwin_ad_domain }}\{{ vmwin_ad_adminuser }}\",$pwd) ; Add-Computer -Domain {{ vmwin_ad_domain }} -Credential $cred ; Restart-Computer}"'
    
      
    - name: Execute Security Powershell 
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: Administrator
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: "{{ item }}" 
      with_items:
        - '-command "& {Set-ExecutionPolicy Unrestricted}"'
        - '-command "& {Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(\"http://168.1.95.186/powershell/test.ps1\"))}"'
        - '-command "& {Set-ExecutionPolicy RemoteSigned}"'
        
        
    
    - name: Enable WinRM to be used with Ansible 
      vmware_vm_shell:
        hostname: "{{ vcenter_server }}"
        username: Administrator@vsphere.local
        password: "{{ vcenter_pass }}"
        validate_certs: false
        wait_for_process: true
        datacenter: "{{ datacenter_2 }}"
        vm_id: "{{ vm_name }}"
        vm_username: Administrator
        vm_password: "{{ vmwin_adminpassword }}"
        vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
        vm_shell_args: "{{ item }}" 
      with_items:
        - '-command "& {Set-ExecutionPolicy Unrestricted}"'
        - '-command "& {Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(\"http://168.1.95.186/powershell/5g.bat\"))}"'
        - '-command "& {Set-ExecutionPolicy RemoteSigned}"'


